{"version":3,"sources":["components/Inscription/Inscription.js","components/Connexion/Connexion.js","components/Profil/Profil.js","assets/components/Footer/Footer.js","components/HomePageClient/HomePageClient.js","assets/components/Cards/Cards.js","components/ListeServeurs/ListeServeurs.js","assets/components/Navbar/Navbar.js","assets/components/CheckoutForm/CheckoutForm.js","components/Payment/Payment.js","assets/components/DailyMenu/DailyMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","components/Payment/Commentaire.js","components/Historique/Historique.js","components/modifierSonProfil/modifierSonProfil.js","components/TipCommun/TipCommun.js","components/TipCommun/TipCommun1.js","components/MangoCards/MangoCards.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Inscription","props","change","event","setState","target","name","value","addNewRegister","e","preventDefault","data","lastname","state","firstname","email","password","gender","age","adress","phone","acceptControl","headers","Headers","options","method","body","JSON","stringify","fetch","then","response","json","responseObject","message","error","console","log","cg","className","Container","Row","Col","xs","s","md","Form","onSubmit","this","Group","controlId","Control","type","placeholder","onChange","as","Check","label","required","href","Button","variant","block","onClick","Component","Connexion","loginClient","token","localStorage","setItem","userId","setLogin","history","push","ClassName","id","to","Label","Client","click","pathname","postDataClient","Authorization","getItem","clientInfo","client","object","deleteClient","window","confirm","alert","signOut","clear","historique","size","footer","deleteProfil","profil","Navbar","fixed","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","eventKey","HomePageClient","CardSection","Liste","getDataServeurs","serveur","restaurantName","_id","saveIdRestaurant","display","tabServeur","map","element","index","fluid","serveurName","Image","src","serveurPicture","serveurMail","BarreMenu","connect","login","Dropdown","alignRight","Menu","Item","stripePromise","loadStripe","CheckoutForm","app","a","stripe","redirectToCheckout","lineItems","price","quantity","mode","successUrl","cancelUrl","app1","app2","appChoice","amount","Number","Payment","Nocompte","DailyMenu","getDailyMenu","db","parse","db1","menu","dailyMenu","picture","err","Card","Body","Img","alt","PasswordRenew","handleInput","passwordRenew","match","params","PasswordReset","passwordReset","Commentaires","addNewStatut","prenom","nom","texte","serveurId","commentaires","class","Historique","montant","Date","date","toLocaleDateString","waiter","Table","striped","hover","modifierMonProfil","editClient","TipCommun","postInfoCard","Icon","useState","show","setShow","useRef","style","backgroundColor","borderColor","ref","color","Overlay","current","placement","Popover","Title","textAlign","Content","MyVerticallyCenteredModal","useHistory","dataMango","Modal","centered","backdrop","Header","borderBlockColor","width","height","marginTop","fontWeight","Footer","axios","url","CardRegistrationURL","qs","cardRegistrationId","Id","accessKeyRef","AccessKey","PreregistrationData","cardNumber","cardExpirationDate","cardCvx","result","data1","walletID","registrationData","result1","Type","border","onHide","TipCommun1","payin","getWalletId","ResultMessage","resultat","modal","MangoCards","App","exact","path","render","component","Profil","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4cb3d2cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n/*import FormControl from \"react-bootstrap/FormControl\";*/\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastname: null,\r\n      firstname: null,\r\n      email: null,\r\n      password: null,\r\n      gender: null,\r\n      age: null,\r\n      adress: null,\r\n      phone: null,\r\n      cg: false,\r\n    };\r\n  }\r\n  /* toggleChange = () => {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked,\r\n    });\r\n  };*/\r\n  /*fonction pour ecrire dans nos input*/\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value, // identifier Id de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      lastname: this.state.lastname,\r\n      firstname: this.state.firstname,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      gender: this.state.gender,\r\n      age: this.state.age,\r\n      adress: this.state.adress,\r\n      phone: this.state.phone,\r\n      acceptControl: this.state.acceptControl,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bigBlocClient\">\r\n        <Container className=\"blocprincipalClient \">\r\n          <Row className=\"creerInscr\">\r\n            <Col className=\"colInscr\" xs={12} s={12} md={7}>\r\n              <h1 className=\"TitreInscription\">Créer mon compte </h1>\r\n              <p className=\"sous-titre\">\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n\r\n              <Form onSubmit={this.addNewRegister}>\r\n                <Form.Group controlId=\"lastname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nom\"\r\n                    name=\"lastname\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"firstname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Prénom\"\r\n                    name=\"firstname\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Control\r\n                    type=\"mail\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"gender\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    type=\"text\"\r\n                    name=\"gender\"\r\n                    onChange={this.change}\r\n                  >\r\n                    <option>-</option>\r\n                    <option>Femme (facultatif)</option>\r\n                    <option>Homme (facultatif)</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"adress\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ville\"\r\n                    name=\"adress\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"phone\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Téléphone\"\r\n                    name=\"phone\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"age\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Age (facultatif)\"\r\n                    name=\"age\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptControl\"\r\n                    label=\"J'ai lu et j'accepte les CGU et CGV\"\r\n                    onChange={this.change}\r\n                    value={this.state.acceptControl}\r\n                    required\r\n                  />\r\n                  <a\r\n                    className=\"cgvLink\"\r\n                    href=\"/CGV_TIPTOTHANK.pdf\"\r\n                    target=\"_blanck\"\r\n                  >\r\n                    CGU et CGV\r\n                  </a>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  className=\"buttonInscri\"\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  block\r\n                  onClick={() => {\r\n                    if (!this.state.acceptControl) {\r\n                      this.setState({\r\n                        message:\r\n                          \"Veuillez accepter les conditions générales d'utilisations\",\r\n                      });\r\n                    } else {\r\n                      this.addNewRegister();\r\n                    }\r\n                  }}\r\n                >\r\n                  S'inscrire\r\n                </Button>\r\n              </Form>\r\n              <p className=\"annonce\">\r\n                *TIPOURBOIRE est responsable du traitement des données\r\n                personnelles collectées sur ce site. Elles sont collectées aux\r\n                fins de : l'exécution du contrat/vous informer de nos nouveautés\r\n                et actualités/à des fins statistiques, les bases légales\r\n                respectives des traitements pouvant être l'exécution du contrat,\r\n                l'intérêt légitime, ou le consentement. Pour plus d'informations\r\n                voir notre politique de confidentialité.\r\n              </p>\r\n\r\n              <br />\r\n              <p>{this.state.message}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: null, password: null };\r\n  }\r\n\r\n  change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  loginClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ message: responseObject.message });\r\n\r\n          if (responseObject.token) {\r\n            localStorage.setItem(\"token\", responseObject.token);\r\n            localStorage.setItem(\"userID\", responseObject.userId);\r\n            this.props.setLogin(true);\r\n            this.props.history.push(\"/Profil\");\r\n          }\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.change}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.change}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.loginClient}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\n//import Navbar from \"../../assets/components/Navbar/Navbar\";\r\n//import Historique from \"../Historique/Historique\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//import Historique from \"../Historique/Historique\";\r\n\r\n/*style import*/\r\nimport \"./profil.css\";\r\n\r\nclass Client extends Component {\r\n  constructor(props) {\r\n    console.log();\r\n    super(props);\r\n    this.state = {\r\n      client: { historique: [] },\r\n    };\r\n  }\r\n  click = () => {\r\n    this.props.history.push({\r\n      pathname: \"/ListeServeurs\",\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  deleteClient = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n      /**\"Bearer Token\" est un JSON Web Token dont le rôle est d'indiquer que l'utilisateur \r\n       qui accède aux ressources est bien authentifié. */\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/Home\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  signOut = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipalProfil \">\r\n        <Button\r\n          className=\"buttontip\"\r\n          variant=\"warning\"\r\n          size=\"sm\"\r\n          onClick={this.click}\r\n        >\r\n          POURBOIRE\r\n        </Button>\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"Titre-profil\">Mon Profil Client</h1>\r\n            <div className=\"infoProfil\">\r\n              <p>\r\n                {this.state.client.firstname} {this.state.client.lastname}\r\n              </p>\r\n              <p className=\"profilPara\">{this.state.client.adress}</p>\r\n              <p className=\"profilPara\">{this.state.client.phone}</p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link to=\"/modifierMonProfil\" className=\"modif\">\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Mettre à jour mon profil\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link to=\"/ListeServeurs\" className=\"modif\">\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Donner un pourboire\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link to=\"/Historique\" className=\"modif\">\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Historique de mes dons\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <div className=\"Titre\">\r\n              <Button\r\n                className=\"buttondeco\"\r\n                variant=\"outline-warning\"\r\n                type=\"submit\"\r\n                onClick={this.signOut}\r\n              >\r\n                Se déconnecter\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <p>{this.state.message}</p>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Client;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass footer extends Component {\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"mentionsLegales/mentionsLégales.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Mentions Légales\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"cgu-cgv/CGV_TIPTOTHANK.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                CGU\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"cgu-cgv/CGV_TIPTOTHANK.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Confidentialité\r\n              </Nav.Link>\r\n              <Nav.Link href=\"\" className=\"textFooter\">\r\n                Cookies\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#pricing\"\r\n                className=\"textFooter\"\r\n                onClick={this.deleteProfil}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link eventKey={2} href=\"#memes\" className=\"textFooter\">\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./HomePageClient.css\";\r\n\r\nclass HomePageClient extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"ContainerHome\">\r\n        <Row className=\"blocHome\">\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Sans compte client</h2>\r\n            <p>Donner un pourboire sans créer de compte</p>\r\n            <Link to={\"/ListeServeurs\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Avec compte client</h2>\r\n            <p>Me connecter à mon espace Tipourboire</p>\r\n            <Link to={\"/\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePageClient;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./Cards.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      Card details\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CardSection;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport Cards from \"../../assets/components/Cards/Cards\";\r\nimport \"./listeServeurs.css\";\r\n\r\nclass Liste extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] } };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataServeurs();\r\n\r\n    console.log(\"localStorage.getItem()\");\r\n    console.log(localStorage.getItem(\"@idRestaurant\"));\r\n  }\r\n\r\n  getDataServeurs = (e) => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n      /*body: JSON.stringify(data),*/\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataServeur\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          this.setState({ serveur: data });\r\n          localStorage.setItem(\"restaurantName\", data.restaurantName);\r\n          localStorage.setItem(\"@idRestaurant\", data._id);\r\n          console.log(data);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  saveIdRestaurant = () => {};\r\n  display = () => {\r\n    return this.state.serveur.tabServeur.map((element, index) => {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"rowTitre\">\r\n            <Col>\r\n              <h3>Donnez un tip à</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowTitre2\">\r\n            <Col s={12}>\r\n              <h3>{element.serveurName}</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowImage\">\r\n            <Col>\r\n              <Image\r\n                src={\r\n                  \"https://back-end.osc-fr1.scalingo.io/\" +\r\n                  element.serveurPicture\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"butTips\">\r\n            <Col>\r\n              <Button\r\n                onClick={() => {\r\n                  const headers = new Headers({\r\n                    \"Content-Type\": \"application/json\",\r\n                  });\r\n                  const data = {\r\n                    email: element.serveurMail,\r\n                  };\r\n                  const options = {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                  };\r\n\r\n                  fetch(\r\n                    \"https://back-end.osc-fr1.scalingo.io/client/emailServeur\",\r\n                    options\r\n                  )\r\n                    .then((response) => {\r\n                      return response;\r\n                    })\r\n                    .then(\r\n                      (data) => {\r\n                        console.log(data);\r\n                      },\r\n\r\n                      (error) => {\r\n                        console.log(error);\r\n                      }\r\n                    );\r\n                  this.props.history.push({\r\n                    pathname: \"/Payment\",\r\n                  });\r\n                }}\r\n              >\r\n                Donner un Pourboire\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocPrincipalClient\">\r\n        <Row className=\"vousEtes\">\r\n          <Col className=\"colLieu\" s={12}>\r\n            <img src=\"/logoTTT/map.png\" />\r\n            <h1 className=\"Titre\">\r\n              Lieu : {this.state.serveur.restaurantName}\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {\" \"}\r\n          <Col className=\"colButton\">\r\n            <Button\r\n              onClick={() => {\r\n                const headers = new Headers({\r\n                  \"Content-Type\": \"application/json\",\r\n                });\r\n                const data = {};\r\n                const options = {\r\n                  method: \"POST\",\r\n                  headers: headers,\r\n                  body: JSON.stringify(data),\r\n                };\r\n\r\n                fetch(\r\n                  \"https://back-end.osc-fr1.scalingo.io/client/emailServeur\",\r\n                  options\r\n                )\r\n                  .then((response) => {\r\n                    return response;\r\n                  })\r\n                  .then(\r\n                    (data) => {\r\n                      console.log(data);\r\n                    },\r\n\r\n                    (error) => {\r\n                      console.log(error);\r\n                    }\r\n                  );\r\n                this.props.history.push({\r\n                  pathname: \"/TipCommun\",\r\n                });\r\n              }}\r\n            >\r\n              Donner à toute l'équipe !\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"display\">\r\n          <Col xs={12} s={12} md={4}>\r\n            {this.display()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Liste;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  NavLink,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n//import Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass BarreMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/Profil\">Mon profil</Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                localStorage.clear();\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              href=\"/\"\r\n            >\r\n              Deconnexion\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    } else {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n            <Dropdown.Item href=\"/Inscription\">Inscription</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n    console.log(\"............\", this.props.login);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"partie1\">\r\n          {this.connect()}\r\n          <Col className=\"logoPartie1\" md={12}>\r\n            <img src=\"/logoTTT/logoJaune.png\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default BarreMenu;\r\n","import React, { Component } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport \"./checkoutForm.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass CheckoutForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      client: {},\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state.client.email);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  app = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 10,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        10 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app1 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 2,\r\n        },\r\n      ],\r\n      mode: \"payment\",\r\n\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        2 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app2 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 5,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        5 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  appChoice = async (event) => {\r\n    if (this.state.amount <= 1) {\r\n      window.alert(\"Le montant minimum du tips doit être de 2 euros\");\r\n\r\n      return;\r\n    } else {\r\n      // When the customer clicks on the button, redirect them to Checkout.\r\n      const stripe = await stripePromise;\r\n      let amount = this.state.amount;\r\n      const { error } = await stripe.redirectToCheckout({\r\n        lineItems: [\r\n          {\r\n            price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n            quantity: Number(amount),\r\n          },\r\n        ],\r\n        mode: \"payment\",\r\n\r\n        successUrl:\r\n          \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n          amount +\r\n          \"&mail=\" +\r\n          this.state.client.email +\r\n          \"&RN=\" +\r\n          localStorage.getItem(\"restaurantName\"),\r\n        cancelUrl: \"http://localhost:3000/Payment\",\r\n      });\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `error.message`.\r\n    }\r\n  };\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className='check'>\r\n        <div className=\"blocTips\">\r\n          <div className=\"allButton\">\r\n            <h1 className=\"titleTips\">Don Tipourboire</h1>\r\n            <Row className=\"RowPourboire\">\r\n              <Col>\r\n                <Button className=\"tipButton1\" onClick={this.app1}>\r\n                   2 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton2\" onClick={this.app2}>\r\n                  5 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton3\" onClick={this.app}>\r\n                  10 €\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <h1 className=\"amount\">Don libre</h1>\r\n          <Row>\r\n            <Col xs={12} s={12} md={12}>\r\n              <Form>\r\n                <Form.Group controlId=\"formGroupAmount\">\r\n                  <Form.Control\r\n                    name=\"amount\"\r\n                    type=\"number\"\r\n                    placeholder=\"Montant\"\r\n                    onChange={this.change}\r\n                    value={this.state.amount}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"amountMsg\">\r\n            (Veuillez saisir uniquement des chiffres entiers)\r\n          </p>\r\n          <Button\r\n            className=\"validAmount\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={this.appChoice}\r\n          >\r\n            Valider\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckoutForm;\r\n","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { _id: \"\" };\r\n  }\r\n\r\n  Nocompte = () => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <p>Tipourboire ne collecte aucune information</p>\r\n          <p>\r\n            <Link to={\"https://stripe.com/payment-terms/legal\"}>\r\n              CGU Stripe\r\n            </Link>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Elements stripe={stripePromise}>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Payment;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Button, Card,Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DailyMenu.css\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      db1: {},\r\n      menu: \"\",\r\n    };\r\n  }\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/menu/\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          let db = JSON.parse(data)\r\n          this.setState({ db1: db })\r\n          this.setState({menu:this.state.db1.menu.dailyMenu.picture})\r\n          console.log(\"this.state.db1\")\r\n         \r\n          console.log(this.state.menu)\r\n        },   \r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipal\">\r\n        \r\n          \r\n        <Card>\r\n          <h2 className=\"Titre\">MENU DU JOUR</h2>\r\n          <Card.Body>\r\n            <p className=\"datemenu\"></p>\r\n          </Card.Body>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={\"https://back-end.osc-fr1.scalingo.io/\" + this.state.menu}\r\n            className=\"dailyMenu\"\r\n            alt=\"Menu du Jour\"\r\n          />\r\n        \r\n         \r\n          \r\n        </Card>\r\n        <Row>\r\n           <Col md={12}>\r\n          <Link to=\"/Home\">\r\n            <Button className=\"button\" variant=\"outline-warning\" size=\"lg\">\r\n              POURBOIRE\r\n            </Button>\r\n          </Link>\r\n          </Col>\r\n          </Row>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return <DailyMenu />;\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-renew\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button className=\"renewButton\">Valider</Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-reset\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n                <button className=\"resetButton\">Confirmer</button>\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Commentaire.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Commentaires extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {commentaires:[{nom:\"\", prenom:\"\", texte:\"\"}] };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewStatut = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n        prenom:this.state.prenom,\r\n        nom:this.state.nom,\r\n        texte: this.state.texte,\r\n        id:this.props.serveurId\r\n\r\n      \r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n     \r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/commentaire\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n           \r\n          this.setState({ message: responseObject.message });\r\n         \r\n          this.props.history.push({\r\n            state: {\r\n              serveurId: this.props.id,\r\n            \r\n              \r\n            },\r\n            pathname:\"/menu\",\r\n           \r\n\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Container className='contCom'>\r\n        <Row className='coms'>\r\n          <Col xs={12} s={12} md={12}><h1 className='titreCom'>Laissez un commentaire à votre serveur</h1></Col>\r\n        </Row>\r\n            <Row className='coms'>\r\n            <Col xs={12} s={12} md={12}>\r\n            <Form.Group>\r\n         \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.prenom}\r\n              name=\"prenom\"\r\n              type=\"text\"\r\n              placeholder=\"Prenom\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n           \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.nom}\r\n              name=\"nom\"\r\n              type=\"text\"\r\n              placeholder=\"nom\"\r\n            />\r\n          </Form.Group>\r\n          <textarea\r\n            onChange={this.handleInput}\r\n            value={this.state.texte}\r\n            name=\"texte\"\r\n            type=\"text\"\r\n            class=\"form-control formCommentaire\"\r\n            placeholder=\"Votre commentaire\"\r\n          ></textarea>\r\n          </Col>\r\n          \r\n          <Col>\r\n          <button\r\n            className=\"buttonStatut\"\r\n            type=\"submit\"\r\n            onClick={this.addNewStatut}\r\n          >\r\n            Publier\r\n          </button>\r\n          </Col>\r\n          <Col className='caract'>\r\n          <small>100 caractères maximum</small>\r\n          </Col>\r\n          </Row>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Commentaires;","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./historique.css\";\r\n\r\nclass Historique extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : { historique : []} ,\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.historique.map((element, index) => {\r\n      return (\r\n       \r\n          <tr>\r\n            <td type=\"text\" id=\"montant\" name=\"montant\">\r\n              {\" \"}\r\n              {element.montant / 100}€\r\n            </td>\r\n            <td type=\"date\" id=\"date\" name=\"date\">\r\n              {\" \"}\r\n              {new Date(element.date).toLocaleDateString()}\r\n            </td>\r\n            <td type=\"text\" id=\"waiter\" name=\"waiter\">\r\n              {\" \"}\r\n              {element.waiter}\r\n            </td>\r\n            <td type=\"text\" id=\"restaurantName\" name=\"restaurantName\">\r\n              {\" \"}\r\n              {element.restaurantName}\r\n            </td>\r\n          </tr>\r\n         \r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='histoClient'>\r\n        <Row>\r\n          <Col className='titleHisto'> <h3>Historique de vos pourboire</h3></Col>\r\n        </Row>\r\n       \r\n      <Row class=\"table-responsive\">\r\n        <Table  striped hover>\r\n        <thead>\r\n      <tr>\r\n        <th>Montant</th>\r\n        <th>Date</th>\r\n        <th>Serveur</th>\r\n        <th>Restaurant</th>\r\n      </tr>\r\n      </thead>\r\n        <tbody>\r\n        {this.display()}\r\n        </tbody>\r\n      </Table>\r\n      </Row>\r\n        \r\n       \r\n      \r\n      </Container>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Historique\r\n","import React, { Component } from \"react\";\r\nimport \"./modifierSonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let client = this.state.client;\r\n    client[event.target.name] = event.target.value;\r\n    this.setState({\r\n      client: client,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={12} className=\"titreModif\">\r\n       \r\n          <h1>Modification du profil</h1>\r\n        \r\n        \r\n        <Form>\r\n          <Form.Group controlId=\"formGroupName\">\r\n            \r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.client.lastname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPrenom\">\r\n         \r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.client.firstname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAdresse\">\r\n            \r\n            <Form.Control\r\n              as=\"select\"\r\n              type=\"text\"\r\n              placeholder=\"Sexe\"\r\n              name=\"gender\"\r\n              onChange={this.change}\r\n              value={this.state.client.gender}\r\n            >\r\n            <option>-</option>\r\n            <option>Femme</option>\r\n            <option>Homme</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formVille\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ville\"\r\n              name=\"adress\"\r\n              onChange={this.change}\r\n              value={this.state.client.adress}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formTel\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telephone(Facultatif)\"\r\n              name=\"phone\"\r\n              onChange={this.change}\r\n              value={this.state.client.phone}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAge\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Age\"\r\n              name=\"age\"\r\n              onChange={this.change}\r\n              value={this.state.client.age}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button\r\n          className=\"submitButton\"\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={this.editClient}\r\n        >\r\n          Mettre à jour mon profil\r\n        </Button>\r\n        <br/>\r\n        {this.state.message}\r\n        </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./TipCommun.css\";\r\n\r\nclass TipCommun extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  postInfoCard = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/TipUser\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem(\"@data\", JSON.stringify(data));\r\n        localStorage.setItem(\"@dataFirstName\", this.state.firstname);\r\n        localStorage.setItem(\"@dataLastName\", this.state.lastname);\r\n        localStorage.setItem(\"@dataMail\", this.state.email);\r\n      });\r\n    this.props.history.push(\"/TipCommun1\");\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Information client</p>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  className=\"formMail\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"E-Mail\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.email}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"lastname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nom\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.lastname}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"firstname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Prénom\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.firstname}\r\n                  className=\"marginInput\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n            <Button className=\"communButton\" onClick={this.postInfoCard}>\r\n              Continuer vers la page de paiement\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun;\r\n","import React, { Component, useEffect, useState, useRef } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Overlay from \"react-bootstrap/Overlay\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport { MdInfoOutline as Info } from \"react-icons/md\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./TipCommun1.css\";\r\nimport { Alert } from \"bootstrap\";\r\n\r\nfunction Icon() {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setShow(!show)}\r\n        style={{\r\n          backgroundColor: \"rgba(52, 52, 52, 0.0)\",\r\n          borderColor: \"rgba(52, 52, 52, 0.0)\",\r\n        }}\r\n        ref={target}\r\n      >\r\n        <Info style={{ color: \"black\" }} />\r\n      </button>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {(props) => (\r\n          <Popover id=\"popover-basic\" {...props}>\r\n            <Popover.Title as=\"h3\" style={{ textAlign: \"center\" }}>\r\n              Paiements sécurisés\r\n            </Popover.Title>\r\n            <Popover.Content style={{ textAlign: \"left\" }}>\r\n              Tous les paiements effectués sur Tipourboire sont cryptés. <br />\r\n              Ils sont gérés par MangoPay, notre partenaire de confiance.\r\n              <br /> Leur technologie sécurisée nous permet d'être assurés que\r\n              le montant reglé pour une transaction est bien envoyé et reçu par\r\n              le(s) serveur(s).\r\n            </Popover.Content>\r\n          </Popover>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  const history = useHistory();\r\n\r\n  let amount = localStorage.getItem(\"amount\");\r\n  let dataMango = JSON.parse(localStorage.getItem(\"@data\"));\r\n  return (\r\n    <Modal {...props} centered backdrop=\"static\">\r\n      <Modal.Header style={{ borderBlockColor: \"#f5a624\" }}>\r\n        <img style={{ width: 150, height: 150 }} src=\"/logoTTT/icone.png\" />\r\n        <h3 style={{ marginTop: 20, textAlign: \"center\", color: \"#f5a624\" }}>\r\n          Tipourboire le pourboire digital !\r\n        </h3>\r\n      </Modal.Header>\r\n\r\n      <h3 style={{ textAlign: \"center\", marginTop: 25 }}>\r\n        Récapitulatif du pourboire\r\n      </h3>\r\n\r\n      <Modal.Body>\r\n        <p>\r\n          Montant du pourboire: {amount} €\r\n          <br />\r\n          Protection Bonne Attribution: {amount * 0.016 + 0.1} €\r\n          <Icon />\r\n          <br />\r\n          <p style={{ fontWeight: \"bolder\" }}>\r\n            Total prélevé: {Number(amount) + (Number(amount) * 0.016 + 0.1)} €\r\n          </p>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Title id=\"contained-modal-title-center\">\r\n        <h3 style={{ textAlign: \"center\" }}>Information de facturation</h3>\r\n      </Modal.Title>\r\n      <Modal.Body>\r\n        <p>\r\n          <br />\r\n          Prénom : {localStorage.getItem(\"@dataFirstName\")}\r\n          <br />\r\n          Nom: {localStorage.getItem(\"@dataLastName\")}\r\n          <br />\r\n          E-mail: {localStorage.getItem(\"@dataMail\")}\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer style={{ borderBlockColor: \"#f5a624\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            axios({\r\n              method: \"post\",\r\n              url: dataMango.CardRegistrationURL,\r\n              data: qs.stringify({\r\n                cardRegistrationId: dataMango.Id,\r\n                accessKeyRef: dataMango.AccessKey,\r\n                data: dataMango.PreregistrationData,\r\n                cardNumber: localStorage.getItem(\"cardNumber\"),\r\n                cardExpirationDate: localStorage.getItem(\"expDate\"),\r\n                cardCvx: localStorage.getItem(\"cvx\"),\r\n              }),\r\n              headers: {\r\n                \"content-type\":\r\n                  \"application/x-www-form-urlencoded;charset=utf-8\",\r\n              },\r\n            }).then((result) => {\r\n              console.log(\r\n                dataMango.Id,\r\n                dataMango.AccessKey,\r\n                dataMango.PreregistrationData,\r\n                localStorage.getItem(\"cardNumber\"),\r\n                localStorage.getItem(\"expDate\"),\r\n                localStorage.getItem(\"cvx\"),\r\n                dataMango.Id,\r\n                result.data\r\n              );\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n              });\r\n              const data1 = {\r\n                walletID: localStorage.getItem(\"walletID\"),\r\n                amount: Number(amount) + (Number(amount) * 0.016 + 0.1),\r\n                cardRegistrationId: dataMango.Id,\r\n                registrationData: result.data,\r\n              };\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify(data1),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/client/payin\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then((result1) => {\r\n                  if (result1.Type === \"param_error\") {\r\n                    window.alert(\r\n                      \"Une erreur s'est produite, veuillez réessayer.\"\r\n                    );\r\n                  } else {\r\n                    let r = window.confirm(\r\n                      \"Merci pour votre pourboire. À bientôt dans nos restaurants partenaires.\"\r\n                    );\r\n\r\n                    if (r == true) {\r\n                      history.push(\"/Menu\");\r\n                    } else {\r\n                      console.log(\"false\");\r\n                    }\r\n                  }\r\n                });\r\n            });\r\n          }}\r\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\r\n        >\r\n          Payer\r\n        </Button>\r\n        <Button\r\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\r\n          onClick={props.onHide}\r\n        >\r\n          Annuler\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nclass TipCommun1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: {}, resultat: {}, walletID: \"\", modal: false };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  payin = () => {};\r\n  getWalletId = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data1 = {\r\n      _id: localStorage.getItem(\"@idRestaurant\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data1),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getWalletId\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        this.setState({ walletID: result });\r\n        this.setState({ message: result.message });\r\n        localStorage.setItem(\"walletID\", result);\r\n        console.log(result.ResultMessage);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletId();\r\n    console.log(\"JSON\");\r\n    this.setState({ data: JSON.parse(localStorage.getItem(\"@data\")) });\r\n    console.log(JSON.parse(localStorage.getItem(\"@data\")));\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Paiement du pourboire</p>\r\n            <h5 className=\"tipsMin\">Le tips doit être de 2 euros minimum !</h5>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  placeholder=\"Montant du Don Général\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardNumber\"\r\n                  type=\"text\"\r\n                  placeholder=\"Numéro de carte bleu\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardExpirationDate\"\r\n                  type=\"text\"\r\n                  placeholder=\"Date d'expiration MMAA\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardCvx\"\r\n                  type=\"text\"\r\n                  placeholder=\"CVC \"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n            <Button\r\n              className=\"communButtonVal\"\r\n              onClick={() => {\r\n                if (this.state.amount <= 1) {\r\n                  window.alert(\r\n                    \"Le montant minimum du tips doit être de 2 euros\"\r\n                  );\r\n                } else {\r\n                  this.setState({ modal: true });\r\n                  localStorage.setItem(\"amount\", this.state.amount);\r\n                  localStorage.setItem(\"cardNumber\", this.state.cardNumber);\r\n                  localStorage.setItem(\"cvx\", this.state.cardCvx);\r\n                  localStorage.setItem(\r\n                    \"expDate\",\r\n                    this.state.cardExpirationDate\r\n                  );\r\n\r\n                  console.log(\"test\", localStorage.getItem(\"amount\"));\r\n                }\r\n              }}\r\n            >\r\n              Payer\r\n            </Button>\r\n          </Col>\r\n          <MyVerticallyCenteredModal\r\n            show={this.state.modal}\r\n            onHide={() => this.setState({ modal: false })}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun1;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass MangoCards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId=\"formGroupAmount\">\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"E-Mail\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"birthday\"\r\n              type=\"date\"\r\n              placeholder=\"Date de naissance\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MangoCards;\r\n","/**\r\n * App.js - Main app component\r\n */\r\n\r\n/*Module imports*/\r\nimport React, { Component } from \"react\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport HomePageClient from \"../HomePageClient/HomePageClient\";\r\nimport Liste from \"../ListeServeurs/ListeServeurs\";\r\nimport BarreMenu from \"../../assets/components/Navbar/Navbar\";\r\nimport Payment from \"../Payment/Payment\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Commentaires from \"../Payment/Commentaire\";\r\nimport Historique from \"../Historique/Historique\";\r\nimport modifierMonProfil from \"../modifierSonProfil/modifierSonProfil\";\r\nimport TipCommun from \"../TipCommun/TipCommun\";\r\nimport TipCommun1 from \"../TipCommun/TipCommun1\";\r\nimport MangoCards from \"../MangoCards/MangoCards\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// loadStripe is initialized with a fake API key.\r\n// Sign in to see examples pre-filled with your key.\r\n\r\n/*Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <BarreMenu setLogin={this.setLogin} login={this.state.login} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/Inscription\" exact component={Inscription} />\r\n            <Route path=\"/Profil\" exact component={Profil} />\r\n            <Route path=\"/Home\" exact component={HomePageClient} />\r\n            <Route path=\"/ListeServeurs\" exact component={Liste} />\r\n            <Route path=\"/Payment\" exact component={Payment} />\r\n            <Route path=\"/menu\" exact component={Menu} />\r\n            <Route path=\"/Commentaires\" exact component={Commentaires} />\r\n            <Route path=\"/passwordReset\" exact component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" exact component={PasswordRenew} />\r\n            <Route path=\"/Historique\" exact component={Historique} />\r\n            <Route path=\"/TipCommun\" exact component={TipCommun} />\r\n            <Route path=\"/TipCommun1\" exact component={TipCommun1} />\r\n            <Route path=\"/MangoCards\" exact component={MangoCards} />\r\n            <Route\r\n              path=\"/modifierMonProfil\"\r\n              exact\r\n              component={modifierMonProfil}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n/*import \"./index.css\";*/\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}