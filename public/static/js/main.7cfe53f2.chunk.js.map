{"version":3,"sources":["components/Inscription/Inscription.js","components/Connexion/Connexion.js","components/Profil/Profil.js","assets/components/Footer/Footer.js","components/HomePageClient/HomePageClient.js","assets/components/Cards/Cards.js","components/ListeServeurs/ListeServeurs.js","assets/components/Navbar/Navbar.js","assets/components/CheckoutForm/CheckoutForm.js","components/Payment/Payment.js","assets/components/DailyMenu/DailyMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","components/Payment/Commentaire.js","components/Historique/Historique.js","components/modifierSonProfil/modifierSonProfil.js","components/TipCommun/TipCommun.js","components/TipCommun/TipCommun1.js","components/MangoCards/MangoCards.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Inscription","props","handleInput","e","setState","target","name","value","addNewRegister","preventDefault","data","FormData","headers","Headers","fetch","method","body","then","response","json","responseObject","message","error","console","log","state","lastname","className","Container","Form","Group","Row","Col","xs","s","md","onSubmit","this","controlId","Control","type","placeholder","onChange","as","Check","label","required","href","Button","variant","block","Component","Connexion","change","loginClient","email","password","options","JSON","stringify","token","localStorage","setItem","userId","setLogin","history","push","ClassName","id","to","onClick","Label","Client","click","pathname","postDataClient","Authorization","getItem","clientInfo","client","object","deleteClient","window","confirm","alert","signOut","clear","historique","size","firstname","adress","phone","footer","deleteProfil","profil","Navbar","fixed","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","eventKey","HomePageClient","CardSection","Liste","getDataServeurs","serveur","restaurantName","_id","saveIdRestaurant","display","tabServeur","map","element","index","fluid","serveurName","Image","src","serveurPicture","serveurMail","BarreMenu","connect","login","Dropdown","alignRight","Menu","Item","stripePromise","loadStripe","CheckoutForm","app","event","a","stripe","redirectToCheckout","lineItems","price","quantity","mode","successUrl","cancelUrl","app1","app2","appChoice","amount","Number","Payment","Nocompte","DailyMenu","getDailyMenu","db","parse","db1","menu","dailyMenu","picture","err","Card","Body","Img","alt","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","Commentaires","addNewStatut","prenom","nom","texte","serveurId","commentaires","class","Historique","montant","Date","date","toLocaleDateString","waiter","Table","striped","hover","modifierMonProfil","editClient","gender","age","TipCommun","postInfoCard","Icon","useState","show","setShow","useRef","style","backgroundColor","borderColor","ref","color","Overlay","current","placement","Popover","Title","textAlign","Content","MyVerticallyCenteredModal","useHistory","dataMango","Modal","centered","backdrop","Header","borderBlockColor","width","height","marginTop","fontWeight","Footer","axios","url","CardRegistrationURL","qs","cardRegistrationId","Id","accessKeyRef","AccessKey","PreregistrationData","cardNumber","cardExpirationDate","cardCvx","result","data1","walletID","registrationData","result1","Type","border","onHide","TipCommun1","payin","getWalletId","ResultMessage","resultat","modal","MangoCards","App","exact","path","render","component","Profil","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7cfe53f2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n/*import FormControl from \"react-bootstrap/FormControl\";*/\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastname: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bigBlocClient\">\r\n        <Container className=\"blocprincipalClient \">\r\n          <Form>\r\n            <Form.Group></Form.Group>\r\n          </Form>\r\n\r\n          <Row className=\"creerInscr\">\r\n            <Col className=\"colInscr\" xs={12} s={12} md={7}>\r\n              <h1 className=\"TitreInscription\">Créer mon compte </h1>\r\n              <p className=\"sous-titre\">\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n              <Form onSubmit={this.addNewRegister}>\r\n                <Form.Group controlId=\"formName\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nom\"\r\n                    name=\"lastname\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formFirstName\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Prénom\"\r\n                    name=\"firstname\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formEmail\">\r\n                  <Form.Control\r\n                    type=\"mail\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGender\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    type=\"text\"\r\n                    name=\"gender\"\r\n                    onChange={this.handleInput}\r\n                  >\r\n                    <option>-</option>\r\n                    <option>Femme (facultatif)</option>\r\n                    <option>Homme (facultatif)</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formAdress\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ville\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPhone\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Téléphone\"\r\n                    name=\"phone\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formAge\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Age (facultatif)\"\r\n                    name=\"age\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptTTT\"\r\n                    label=\"J'accepte la réception de courriers électroniques et de SMS publicitaires de la part de Tipourboire\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptTier\"\r\n                    label=\"J'accepte la réception de courriers électroniques et de SMS publicitaires de la part de tiers\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptControl\"\r\n                    label=\"J'ai lu et j'accepte les CGU et CGV\"\r\n                    onChange={this.handleInput}\r\n                    required\r\n                  />\r\n                  <a\r\n                    className=\"cgvLink\"\r\n                    href=\"/CGV_TIPTOTHANK.pdf\"\r\n                    target=\"_blanck\"\r\n                  >\r\n                    CGU et CGV\r\n                  </a>\r\n                </Form.Group>\r\n                <Button\r\n                  className=\"buttonInscri\"\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  block\r\n                >\r\n                  S'inscrire\r\n                </Button>\r\n              </Form>\r\n\r\n              <p className=\"annonce\">\r\n                *TIPOURBOIRE est responsable du traitement des données\r\n                personnelles collectées sur ce site. Elles sont collectées aux\r\n                fins de : l'exécution du contrat/vous informer de nos nouveautés\r\n                et actualités/à des fins statistiques, les bases légales\r\n                respectives des traitements pouvant être l'exécution du contrat,\r\n                l'intérêt légitime, ou le consentement. Pour plus d'informations\r\n                voir notre politique de confidentialité.\r\n              </p>\r\n\r\n              <br />\r\n              <p>{this.state.message}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: null, password: null };\r\n  }\r\n\r\n  change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  loginClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ message: responseObject.message });\r\n\r\n          if (responseObject.token) {\r\n            localStorage.setItem(\"token\", responseObject.token);\r\n            localStorage.setItem(\"userID\", responseObject.userId);\r\n            this.props.setLogin(true);\r\n            this.props.history.push(\"/Profil\");\r\n          }\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.change}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.change}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.loginClient}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\n//import Navbar from \"../../assets/components/Navbar/Navbar\";\r\n//import Historique from \"../Historique/Historique\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//import Historique from \"../Historique/Historique\";\r\n\r\n/*style import*/\r\nimport \"./profil.css\";\r\n\r\nclass Client extends Component {\r\n  constructor(props) {\r\n    console.log();\r\n    super(props);\r\n    this.state = {\r\n      client: { historique: [] },\r\n    };\r\n  }\r\n  click = () => {\r\n    this.props.history.push({\r\n      pathname: \"/ListeServeurs\",\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  deleteClient = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n      /**\"Bearer Token\" est un JSON Web Token dont le rôle est d'indiquer que l'utilisateur \r\n       qui accède aux ressources est bien authentifié. */\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/Home\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  signOut = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipalProfil \">\r\n        <Button\r\n          className=\"buttontip\"\r\n          variant=\"warning\"\r\n          size=\"sm\"\r\n          onClick={this.click}\r\n        >\r\n          POURBOIRE\r\n        </Button>\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"Titre-profil\">Mon Profil Client</h1>\r\n            <div className=\"infoProfil\">\r\n              <p>\r\n                {this.state.client.firstname} {this.state.client.lastname}\r\n              </p>\r\n              <p className=\"profilPara\">{this.state.client.adress}</p>\r\n              <p className=\"profilPara\">{this.state.client.phone}</p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link to=\"/modifierMonProfil\" className=\"modif\">\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Mettre à jour mon profil\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link to=\"/ListeServeurs\" className=\"modif\">\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Donner un pourboire\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link to=\"/Historique\" className=\"modif\">\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Historique de mes dons\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <div className=\"Titre\">\r\n              <Button\r\n                className=\"buttondeco\"\r\n                variant=\"outline-warning\"\r\n                type=\"submit\"\r\n                onClick={this.signOut}\r\n              >\r\n                Se déconnecter\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <p>{this.state.message}</p>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Client;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass footer extends Component {\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"mentionsLegales/mentionsLégales.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Mentions Légales\r\n              </Nav.Link>\r\n              <Nav.Link href=\"cgu-cgv/CGV.pdf\" className=\"textFooter\">\r\n                CGU\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"confidentialité/Politique_de_confidentialité.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Confidentialité\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"\"\r\n                className=\"textFooter\"\r\n                href=\"cookies/POLITIQUE_DE_COOKIES.pdf\"\r\n              >\r\n                Cookies\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#pricing\"\r\n                className=\"textFooter\"\r\n                onClick={this.deleteProfil}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link eventKey={2} href=\"#memes\" className=\"textFooter\">\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./HomePageClient.css\";\r\n\r\nclass HomePageClient extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"ContainerHome\">\r\n        <Row className=\"blocHome\">\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Sans compte client</h2>\r\n            <p>Donner un pourboire sans créer de compte</p>\r\n            <Link to={\"/ListeServeurs\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Avec compte client</h2>\r\n            <p>Me connecter à mon espace Tipourboire</p>\r\n            <Link to={\"/\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePageClient;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./Cards.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      Card details\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CardSection;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport Cards from \"../../assets/components/Cards/Cards\";\r\nimport \"./listeServeurs.css\";\r\n\r\nclass Liste extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] } };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataServeurs();\r\n\r\n    console.log(\"localStorage.getItem()\");\r\n    console.log(localStorage.getItem(\"@idRestaurant\"));\r\n  }\r\n\r\n  getDataServeurs = (e) => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n      /*body: JSON.stringify(data),*/\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataServeur\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          this.setState({ serveur: data });\r\n          localStorage.setItem(\"restaurantName\", data.restaurantName);\r\n          localStorage.setItem(\"@idRestaurant\", data._id);\r\n          console.log(data);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  saveIdRestaurant = () => {};\r\n  display = () => {\r\n    return this.state.serveur.tabServeur.map((element, index) => {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"rowTitre\">\r\n            <Col>\r\n              <h3>Donnez un tip à</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowTitre2\">\r\n            <Col s={12}>\r\n              <h3>{element.serveurName}</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowImage\">\r\n            <Col>\r\n              <Image\r\n                src={\r\n                  \"https://back-end.osc-fr1.scalingo.io/\" +\r\n                  element.serveurPicture\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"butTips\">\r\n            <Col>\r\n              <Button\r\n                onClick={() => {\r\n                  const headers = new Headers({\r\n                    \"Content-Type\": \"application/json\",\r\n                  });\r\n                  const data = {\r\n                    email: element.serveurMail,\r\n                  };\r\n                  const options = {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                  };\r\n\r\n                  fetch(\r\n                    \"https://back-end.osc-fr1.scalingo.io/client/emailServeur\",\r\n                    options\r\n                  )\r\n                    .then((response) => {\r\n                      return response;\r\n                    })\r\n                    .then(\r\n                      (data) => {\r\n                        console.log(data);\r\n                      },\r\n\r\n                      (error) => {\r\n                        console.log(error);\r\n                      }\r\n                    );\r\n                  this.props.history.push({\r\n                    pathname: \"/Payment\",\r\n                  });\r\n                }}\r\n              >\r\n                Donner un Pourboire\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocPrincipalClient\">\r\n        <Row className=\"vousEtes\">\r\n          <Col className=\"colLieu\" s={12}>\r\n            <img src=\"/logoTTT/map.png\" />\r\n            <h1 className=\"Titre\">\r\n              Lieu : {this.state.serveur.restaurantName}\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {\" \"}\r\n          <Col className=\"colButton\">\r\n            <Button\r\n              onClick={() => {\r\n                const headers = new Headers({\r\n                  \"Content-Type\": \"application/json\",\r\n                });\r\n                const data = {};\r\n                const options = {\r\n                  method: \"POST\",\r\n                  headers: headers,\r\n                  body: JSON.stringify(data),\r\n                };\r\n\r\n                fetch(\r\n                  \"https://back-end.osc-fr1.scalingo.io/client/emailServeur\",\r\n                  options\r\n                )\r\n                  .then((response) => {\r\n                    return response;\r\n                  })\r\n                  .then(\r\n                    (data) => {\r\n                      console.log(data);\r\n                    },\r\n\r\n                    (error) => {\r\n                      console.log(error);\r\n                    }\r\n                  );\r\n                this.props.history.push({\r\n                  pathname: \"/TipCommun\",\r\n                });\r\n              }}\r\n            >\r\n              Donner à toute l'équipe !\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"display\">\r\n          <Col xs={12} s={12} md={4}>\r\n            {this.display()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Liste;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  NavLink,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n//import Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass BarreMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/Profil\">Mon profil</Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                localStorage.clear();\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              href=\"/\"\r\n            >\r\n              Deconnexion\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    } else {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n            <Dropdown.Item href=\"/Inscription\">Inscription</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n    console.log(\"............\", this.props.login);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"partie1\">\r\n          {this.connect()}\r\n          <Col className=\"logoPartie1\" md={12}>\r\n            <img src=\"/logoTTT/logoJaune.png\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default BarreMenu;\r\n","import React, { Component } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport \"./checkoutForm.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass CheckoutForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      client: {},\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state.client.email);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  app = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 10,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        10 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app1 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 2,\r\n        },\r\n      ],\r\n      mode: \"payment\",\r\n\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        2 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app2 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 5,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        5 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  appChoice = async (event) => {\r\n    if (this.state.amount <= 1) {\r\n      window.alert(\"Le montant minimum du tips doit être de 2 euros\");\r\n\r\n      return;\r\n    } else {\r\n      // When the customer clicks on the button, redirect them to Checkout.\r\n      const stripe = await stripePromise;\r\n      let amount = this.state.amount;\r\n      const { error } = await stripe.redirectToCheckout({\r\n        lineItems: [\r\n          {\r\n            price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n            quantity: Number(amount),\r\n          },\r\n        ],\r\n        mode: \"payment\",\r\n\r\n        successUrl:\r\n          \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n          amount +\r\n          \"&mail=\" +\r\n          this.state.client.email +\r\n          \"&RN=\" +\r\n          localStorage.getItem(\"restaurantName\"),\r\n        cancelUrl: \"http://localhost:3000/Payment\",\r\n      });\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `error.message`.\r\n    }\r\n  };\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className='check'>\r\n        <div className=\"blocTips\">\r\n          <div className=\"allButton\">\r\n            <h1 className=\"titleTips\">Don Tipourboire</h1>\r\n            <Row className=\"RowPourboire\">\r\n              <Col>\r\n                <Button className=\"tipButton1\" onClick={this.app1}>\r\n                   2 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton2\" onClick={this.app2}>\r\n                  5 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton3\" onClick={this.app}>\r\n                  10 €\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <h1 className=\"amount\">Don libre</h1>\r\n          <Row>\r\n            <Col xs={12} s={12} md={12}>\r\n              <Form>\r\n                <Form.Group controlId=\"formGroupAmount\">\r\n                  <Form.Control\r\n                    name=\"amount\"\r\n                    type=\"number\"\r\n                    placeholder=\"Montant\"\r\n                    onChange={this.change}\r\n                    value={this.state.amount}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"amountMsg\">\r\n            (Veuillez saisir uniquement des chiffres entiers)\r\n          </p>\r\n          <Button\r\n            className=\"validAmount\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={this.appChoice}\r\n          >\r\n            Valider\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckoutForm;\r\n","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { _id: \"\" };\r\n  }\r\n\r\n  Nocompte = () => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <p>Tipourboire ne collecte aucune information</p>\r\n          <p>\r\n            <Link to={\"https://stripe.com/payment-terms/legal\"}>\r\n              CGU Stripe\r\n            </Link>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Elements stripe={stripePromise}>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Payment;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Button, Card,Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DailyMenu.css\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      db1: {},\r\n      menu: \"\",\r\n    };\r\n  }\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/menu/\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          let db = JSON.parse(data)\r\n          this.setState({ db1: db })\r\n          this.setState({menu:this.state.db1.menu.dailyMenu.picture})\r\n          console.log(\"this.state.db1\")\r\n         \r\n          console.log(this.state.menu)\r\n        },   \r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipal\">\r\n        \r\n          \r\n        <Card>\r\n          <h2 className=\"Titre\">MENU DU JOUR</h2>\r\n          <Card.Body>\r\n            <p className=\"datemenu\"></p>\r\n          </Card.Body>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={\"https://back-end.osc-fr1.scalingo.io/\" + this.state.menu}\r\n            className=\"dailyMenu\"\r\n            alt=\"Menu du Jour\"\r\n          />\r\n        \r\n         \r\n          \r\n        </Card>\r\n        <Row>\r\n           <Col md={12}>\r\n          <Link to=\"/Home\">\r\n            <Button className=\"button\" variant=\"outline-warning\" size=\"lg\">\r\n              POURBOIRE\r\n            </Button>\r\n          </Link>\r\n          </Col>\r\n          </Row>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return <DailyMenu />;\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-renew\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button className=\"renewButton\">Valider</Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-reset\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n                <button className=\"resetButton\">Confirmer</button>\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Commentaire.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Commentaires extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {commentaires:[{nom:\"\", prenom:\"\", texte:\"\"}] };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewStatut = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n        prenom:this.state.prenom,\r\n        nom:this.state.nom,\r\n        texte: this.state.texte,\r\n        id:this.props.serveurId\r\n\r\n      \r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n     \r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/commentaire\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n           \r\n          this.setState({ message: responseObject.message });\r\n         \r\n          this.props.history.push({\r\n            state: {\r\n              serveurId: this.props.id,\r\n            \r\n              \r\n            },\r\n            pathname:\"/menu\",\r\n           \r\n\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Container className='contCom'>\r\n        <Row className='coms'>\r\n          <Col xs={12} s={12} md={12}><h1 className='titreCom'>Laissez un commentaire à votre serveur</h1></Col>\r\n        </Row>\r\n            <Row className='coms'>\r\n            <Col xs={12} s={12} md={12}>\r\n            <Form.Group>\r\n         \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.prenom}\r\n              name=\"prenom\"\r\n              type=\"text\"\r\n              placeholder=\"Prenom\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n           \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.nom}\r\n              name=\"nom\"\r\n              type=\"text\"\r\n              placeholder=\"nom\"\r\n            />\r\n          </Form.Group>\r\n          <textarea\r\n            onChange={this.handleInput}\r\n            value={this.state.texte}\r\n            name=\"texte\"\r\n            type=\"text\"\r\n            class=\"form-control formCommentaire\"\r\n            placeholder=\"Votre commentaire\"\r\n          ></textarea>\r\n          </Col>\r\n          \r\n          <Col>\r\n          <button\r\n            className=\"buttonStatut\"\r\n            type=\"submit\"\r\n            onClick={this.addNewStatut}\r\n          >\r\n            Publier\r\n          </button>\r\n          </Col>\r\n          <Col className='caract'>\r\n          <small>100 caractères maximum</small>\r\n          </Col>\r\n          </Row>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Commentaires;","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./historique.css\";\r\n\r\nclass Historique extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : { historique : []} ,\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.historique.map((element, index) => {\r\n      return (\r\n       \r\n          <tr>\r\n            <td type=\"text\" id=\"montant\" name=\"montant\">\r\n              {\" \"}\r\n              {element.montant / 100}€\r\n            </td>\r\n            <td type=\"date\" id=\"date\" name=\"date\">\r\n              {\" \"}\r\n              {new Date(element.date).toLocaleDateString()}\r\n            </td>\r\n            <td type=\"text\" id=\"waiter\" name=\"waiter\">\r\n              {\" \"}\r\n              {element.waiter}\r\n            </td>\r\n            <td type=\"text\" id=\"restaurantName\" name=\"restaurantName\">\r\n              {\" \"}\r\n              {element.restaurantName}\r\n            </td>\r\n          </tr>\r\n         \r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='histoClient'>\r\n        <Row>\r\n          <Col className='titleHisto'> <h3>Historique de vos pourboire</h3></Col>\r\n        </Row>\r\n       \r\n      <Row class=\"table-responsive\">\r\n        <Table  striped hover>\r\n        <thead>\r\n      <tr>\r\n        <th>Montant</th>\r\n        <th>Date</th>\r\n        <th>Serveur</th>\r\n        <th>Restaurant</th>\r\n      </tr>\r\n      </thead>\r\n        <tbody>\r\n        {this.display()}\r\n        </tbody>\r\n      </Table>\r\n      </Row>\r\n        \r\n       \r\n      \r\n      </Container>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Historique\r\n","import React, { Component } from \"react\";\r\nimport \"./modifierSonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let client = this.state.client;\r\n    client[event.target.name] = event.target.value;\r\n    this.setState({\r\n      client: client,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={12} className=\"titreModif\">\r\n       \r\n          <h1>Modification du profil</h1>\r\n        \r\n        \r\n        <Form>\r\n          <Form.Group controlId=\"formGroupName\">\r\n            \r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.client.lastname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPrenom\">\r\n         \r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.client.firstname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAdresse\">\r\n            \r\n            <Form.Control\r\n              as=\"select\"\r\n              type=\"text\"\r\n              placeholder=\"Sexe\"\r\n              name=\"gender\"\r\n              onChange={this.change}\r\n              value={this.state.client.gender}\r\n            >\r\n            <option>-</option>\r\n            <option>Femme</option>\r\n            <option>Homme</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formVille\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ville\"\r\n              name=\"adress\"\r\n              onChange={this.change}\r\n              value={this.state.client.adress}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formTel\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telephone(Facultatif)\"\r\n              name=\"phone\"\r\n              onChange={this.change}\r\n              value={this.state.client.phone}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAge\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Age\"\r\n              name=\"age\"\r\n              onChange={this.change}\r\n              value={this.state.client.age}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button\r\n          className=\"submitButton\"\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={this.editClient}\r\n        >\r\n          Mettre à jour mon profil\r\n        </Button>\r\n        <br/>\r\n        {this.state.message}\r\n        </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./TipCommun.css\";\r\n\r\nclass TipCommun extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  postInfoCard = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/TipUser\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem(\"@data\", JSON.stringify(data));\r\n        localStorage.setItem(\"@dataFirstName\", this.state.firstname);\r\n        localStorage.setItem(\"@dataLastName\", this.state.lastname);\r\n        localStorage.setItem(\"@dataMail\", this.state.email);\r\n      });\r\n    this.props.history.push(\"/TipCommun1\");\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Information client</p>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  className=\"formMail\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"E-Mail\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.email}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"lastname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nom\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.lastname}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"firstname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Prénom\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.firstname}\r\n                  className=\"marginInput\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n            <Button className=\"communButton\" onClick={this.postInfoCard}>\r\n              Continuer vers la page de paiement\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun;\r\n","import React, { Component, useEffect, useState, useRef } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Overlay from \"react-bootstrap/Overlay\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport { MdInfoOutline as Info } from \"react-icons/md\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./TipCommun1.css\";\r\nimport { Alert } from \"bootstrap\";\r\n\r\nfunction Icon() {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setShow(!show)}\r\n        style={{\r\n          backgroundColor: \"rgba(52, 52, 52, 0.0)\",\r\n          borderColor: \"rgba(52, 52, 52, 0.0)\",\r\n        }}\r\n        ref={target}\r\n      >\r\n        <Info style={{ color: \"black\" }} />\r\n      </button>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {(props) => (\r\n          <Popover id=\"popover-basic\" {...props}>\r\n            <Popover.Title as=\"h3\" style={{ textAlign: \"center\" }}>\r\n              Paiements sécurisés\r\n            </Popover.Title>\r\n            <Popover.Content style={{ textAlign: \"left\" }}>\r\n              Tous les paiements effectués sur Tipourboire sont cryptés. <br />\r\n              Ils sont gérés par MangoPay, notre partenaire de confiance.\r\n              <br /> Leur technologie sécurisée nous permet d'être assurés que\r\n              le montant reglé pour une transaction est bien envoyé et reçu par\r\n              le(s) serveur(s).\r\n            </Popover.Content>\r\n          </Popover>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  const history = useHistory();\r\n\r\n  let amount = localStorage.getItem(\"amount\");\r\n  let dataMango = JSON.parse(localStorage.getItem(\"@data\"));\r\n  return (\r\n    <Modal {...props} centered backdrop=\"static\">\r\n      <Modal.Header style={{ borderBlockColor: \"#f5a624\" }}>\r\n        <img style={{ width: 150, height: 150 }} src=\"/logoTTT/icone.png\" />\r\n        <h3 style={{ marginTop: 20, textAlign: \"center\", color: \"#f5a624\" }}>\r\n          Tipourboire le pourboire digital !\r\n        </h3>\r\n      </Modal.Header>\r\n\r\n      <h3 style={{ textAlign: \"center\", marginTop: 25 }}>\r\n        Récapitulatif du pourboire\r\n      </h3>\r\n\r\n      <Modal.Body>\r\n        <p>\r\n          Montant du pourboire: {amount} €\r\n          <br />\r\n          Protection Bonne Attribution: {amount * 0.016 + 0.1} €\r\n          <Icon />\r\n          <br />\r\n          <p style={{ fontWeight: \"bolder\" }}>\r\n            Total prélevé: {Number(amount) + (Number(amount) * 0.016 + 0.1)} €\r\n          </p>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Title id=\"contained-modal-title-center\">\r\n        <h3 style={{ textAlign: \"center\" }}>Information de facturation</h3>\r\n      </Modal.Title>\r\n      <Modal.Body>\r\n        <p>\r\n          <br />\r\n          Prénom : {localStorage.getItem(\"@dataFirstName\")}\r\n          <br />\r\n          Nom: {localStorage.getItem(\"@dataLastName\")}\r\n          <br />\r\n          E-mail: {localStorage.getItem(\"@dataMail\")}\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer style={{ borderBlockColor: \"#f5a624\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            axios({\r\n              method: \"post\",\r\n              url: dataMango.CardRegistrationURL,\r\n              data: qs.stringify({\r\n                cardRegistrationId: dataMango.Id,\r\n                accessKeyRef: dataMango.AccessKey,\r\n                data: dataMango.PreregistrationData,\r\n                cardNumber: localStorage.getItem(\"cardNumber\"),\r\n                cardExpirationDate: localStorage.getItem(\"expDate\"),\r\n                cardCvx: localStorage.getItem(\"cvx\"),\r\n              }),\r\n              headers: {\r\n                \"content-type\":\r\n                  \"application/x-www-form-urlencoded;charset=utf-8\",\r\n              },\r\n            }).then((result) => {\r\n              console.log(\r\n                dataMango.Id,\r\n                dataMango.AccessKey,\r\n                dataMango.PreregistrationData,\r\n                localStorage.getItem(\"cardNumber\"),\r\n                localStorage.getItem(\"expDate\"),\r\n                localStorage.getItem(\"cvx\"),\r\n                dataMango.Id,\r\n                result.data\r\n              );\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n              });\r\n              const data1 = {\r\n                walletID: localStorage.getItem(\"walletID\"),\r\n                amount: Number(amount) + (Number(amount) * 0.016 + 0.1),\r\n                cardRegistrationId: dataMango.Id,\r\n                registrationData: result.data,\r\n              };\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify(data1),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/client/payin\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then((result1) => {\r\n                  if (result1.Type === \"param_error\") {\r\n                    window.alert(\r\n                      \"Une erreur s'est produite, veuillez réessayer.\"\r\n                    );\r\n                  } else {\r\n                    let r = window.confirm(\r\n                      \"Merci pour votre pourboire. À bientôt dans nos restaurants partenaires.\"\r\n                    );\r\n\r\n                    if (r == true) {\r\n                      history.push(\"/Menu\");\r\n                    } else {\r\n                      console.log(\"false\");\r\n                    }\r\n                  }\r\n                });\r\n            });\r\n          }}\r\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\r\n        >\r\n          Payer\r\n        </Button>\r\n        <Button\r\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\r\n          onClick={props.onHide}\r\n        >\r\n          Annuler\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nclass TipCommun1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: {}, resultat: {}, walletID: \"\", modal: false };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  payin = () => {};\r\n  getWalletId = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data1 = {\r\n      _id: localStorage.getItem(\"@idRestaurant\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data1),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getWalletId\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        this.setState({ walletID: result });\r\n        this.setState({ message: result.message });\r\n        localStorage.setItem(\"walletID\", result);\r\n        console.log(result.ResultMessage);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletId();\r\n    console.log(\"JSON\");\r\n    this.setState({ data: JSON.parse(localStorage.getItem(\"@data\")) });\r\n    console.log(JSON.parse(localStorage.getItem(\"@data\")));\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Paiement du pourboire</p>\r\n            <h5 className=\"tipsMin\">Le tips doit être de 2 euros minimum !</h5>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  placeholder=\"Montant du Don Général\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardNumber\"\r\n                  type=\"text\"\r\n                  placeholder=\"Numéro de carte bleu\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardExpirationDate\"\r\n                  type=\"text\"\r\n                  placeholder=\"Date d'expiration MMAA\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardCvx\"\r\n                  type=\"text\"\r\n                  placeholder=\"CVC \"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n            <Button\r\n              className=\"communButtonVal\"\r\n              onClick={() => {\r\n                if (this.state.amount <= 1) {\r\n                  window.alert(\r\n                    \"Le montant minimum du tips doit être de 2 euros\"\r\n                  );\r\n                } else {\r\n                  this.setState({ modal: true });\r\n                  localStorage.setItem(\"amount\", this.state.amount);\r\n                  localStorage.setItem(\"cardNumber\", this.state.cardNumber);\r\n                  localStorage.setItem(\"cvx\", this.state.cardCvx);\r\n                  localStorage.setItem(\r\n                    \"expDate\",\r\n                    this.state.cardExpirationDate\r\n                  );\r\n\r\n                  console.log(\"test\", localStorage.getItem(\"amount\"));\r\n                }\r\n              }}\r\n            >\r\n              Payer\r\n            </Button>\r\n          </Col>\r\n          <MyVerticallyCenteredModal\r\n            show={this.state.modal}\r\n            onHide={() => this.setState({ modal: false })}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun1;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass MangoCards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId=\"formGroupAmount\">\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"E-Mail\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"birthday\"\r\n              type=\"date\"\r\n              placeholder=\"Date de naissance\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MangoCards;\r\n","/**\r\n * App.js - Main app component\r\n */\r\n\r\n/*Module imports*/\r\nimport React, { Component } from \"react\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport HomePageClient from \"../HomePageClient/HomePageClient\";\r\nimport Liste from \"../ListeServeurs/ListeServeurs\";\r\nimport BarreMenu from \"../../assets/components/Navbar/Navbar\";\r\nimport Payment from \"../Payment/Payment\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Commentaires from \"../Payment/Commentaire\";\r\nimport Historique from \"../Historique/Historique\";\r\nimport modifierMonProfil from \"../modifierSonProfil/modifierSonProfil\";\r\nimport TipCommun from \"../TipCommun/TipCommun\";\r\nimport TipCommun1 from \"../TipCommun/TipCommun1\";\r\nimport MangoCards from \"../MangoCards/MangoCards\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// loadStripe is initialized with a fake API key.\r\n// Sign in to see examples pre-filled with your key.\r\n\r\n/*Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <BarreMenu setLogin={this.setLogin} login={this.state.login} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/Inscription\" exact component={Inscription} />\r\n            <Route path=\"/Profil\" exact component={Profil} />\r\n            <Route path=\"/Home\" exact component={HomePageClient} />\r\n            <Route path=\"/ListeServeurs\" exact component={Liste} />\r\n            <Route path=\"/Payment\" exact component={Payment} />\r\n            <Route path=\"/menu\" exact component={Menu} />\r\n            <Route path=\"/Commentaires\" exact component={Commentaires} />\r\n            <Route path=\"/passwordReset\" exact component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" exact component={PasswordRenew} />\r\n            <Route path=\"/Historique\" exact component={Historique} />\r\n            <Route path=\"/TipCommun\" exact component={TipCommun} />\r\n            <Route path=\"/TipCommun1\" exact component={TipCommun1} />\r\n            <Route path=\"/MangoCards\" exact component={MangoCards} />\r\n            <Route\r\n              path=\"/modifierMonProfil\"\r\n              exact\r\n              component={modifierMonProfil}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n/*import \"./index.css\";*/\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}