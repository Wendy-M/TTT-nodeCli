{"version":3,"sources":["components/Inscription/Inscription.js","components/Connexion/Connexion.js","components/Profil/Profil.js","assets/components/Footer/Footer.js","components/HomePageClient/HomePageClient.js","assets/components/Cards/Cards.js","components/ListeServeurs/ListeServeurs.js","assets/components/Navbar/Navbar.js","assets/components/CheckoutForm/CheckoutForm.js","components/Payment/Payment.js","assets/components/DailyMenu/DailyMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","components/Payment/Commentaire.js","components/Historique/Historique.js","components/modifierSonProfil/modifierSonProfil.js","components/TipCommun/TipCommun.js","components/TipCommun/TipCommun1.js","components/MangoCards/MangoCards.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Inscription","props","change","event","setState","target","name","value","checkboxchange","checked","addNewRegister","e","preventDefault","data","lastname","state","firstname","email","password","gender","age","adress","phone","headers","Headers","options","method","body","JSON","stringify","fetch","then","response","json","responseObject","message","success","alert","history","push","error","console","log","cg","className","Container","Row","Col","xs","s","md","Form","Group","controlId","Control","type","placeholder","onChange","this","as","style","marginLeft","href","Check","label","Button","onClick","Component","Connexion","loginClient","token","localStorage","setItem","userId","setLogin","ClassName","id","to","Label","Client","click","pathname","postDataClient","Authorization","getItem","clientInfo","client","object","deleteClient","window","confirm","signOut","clear","historique","variant","size","footer","deleteProfil","profil","Navbar","fixed","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","eventKey","HomePageClient","CardSection","Liste","getDataServeurs","serveur","restaurantName","_id","saveIdRestaurant","display","tabServeur","map","element","index","fluid","serveurName","Image","src","serveurPicture","serveurMail","BarreMenu","connect","login","Dropdown","alignRight","Menu","Item","stripePromise","loadStripe","CheckoutForm","app","a","stripe","redirectToCheckout","lineItems","price","quantity","mode","successUrl","cancelUrl","app1","app2","appChoice","amount","Number","Payment","Nocompte","DailyMenu","getDailyMenu","db","parse","db1","menu","dailyMenu","picture","err","Card","Body","Img","alt","PasswordRenew","handleInput","passwordRenew","match","params","onSubmit","PasswordReset","passwordReset","Commentaires","addNewStatut","prenom","nom","texte","serveurId","commentaires","class","Historique","montant","Date","date","toLocaleDateString","waiter","Table","striped","hover","modifierMonProfil","editClient","TipCommun","postInfoCard","TipCommun1","postToken","axios","url","CardRegistrationURL","qs","cardRegistrationId","Id","accessKeyRef","AccessKey","PreregistrationData","cardNumber","cardExpirationDate","cardCvx","result","resultat","payin","data1","walletID","registrationData","Type","getWalletId","ResultMessage","MangoCards","App","exact","path","render","component","Profil","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8fbf3d1b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n/*import FormControl from \"react-bootstrap/FormControl\";*/\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastname: null,\r\n      firstname: null,\r\n      email: null,\r\n      password: null,\r\n      gender: null,\r\n      age: null,\r\n      adress: null,\r\n      phone: null,\r\n      cg: false,\r\n    };\r\n  }\r\n  /* toggleChange = () => {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked,\r\n    });\r\n  };*/\r\n  /*fonction pour ecrire dans nos input*/\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value, // identifier Id de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n\r\n  checkboxchange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.checked, // identifier Id de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      lastname: this.state.lastname,\r\n      firstname: this.state.firstname,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      gender: this.state.gender,\r\n      age: this.state.age,\r\n      adress: this.state.adress,\r\n      phone: this.state.phone,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n\r\n          if (responseObject.success === true) {\r\n            alert(\r\n              \"Votre inscription a bien été prise en compte. Vous pouvez désormais accéder à votre compte\"\r\n            );\r\n            this.props.history.push(\"/\");\r\n          } /* pour allez vers la page connexion une fois l'inscription done--success déclaré en back*/\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bigBlocClient\">\r\n        <Container className=\"blocprincipalClient \">\r\n          <Row className=\"creerInscr\">\r\n            <Col className=\"colInscr\" xs={12} s={12} md={7}>\r\n              <h1 className=\"TitreInscription\">Créer mon compte </h1>\r\n              <p className=\"sous-titre\">\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n\r\n              <Form className=\"form1\">\r\n                <Form.Group controlId=\"lastname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nom\"\r\n                    name=\"lastname\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"firstname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Prénom\"\r\n                    name=\"firstname\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Control\r\n                    type=\"mail\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.change}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form className=\"form2\">\r\n                  <Form.Group controlId=\"gender\">\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      type=\"text\"\r\n                      name=\"gender\"\r\n                      onChange={this.change}\r\n                    >\r\n                      <option>-</option>\r\n                      <option>Femme</option>\r\n                      <option>Homme</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"adress\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Ville\"\r\n                      name=\"adress\"\r\n                      onChange={this.change}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"phone\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Téléphone\"\r\n                      name=\"phone\"\r\n                      onChange={this.change}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"age\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Age\"\r\n                      name=\"age\"\r\n                      onChange={this.change}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Row style={{ marginLeft: \"2px\" }}>\r\n                    <a\r\n                      className=\"cgvLink\"\r\n                      href=\"/CGV_TIPTOTHANK.pdf\"\r\n                      target=\"_blanck\"\r\n                    >\r\n                      J'ai lu et j'accepte les CGU et CGV\r\n                    </a>\r\n                  </Row>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    className=\"checkbox\"\r\n                    type=\"checkbox\"\r\n                    label=\"J'accepte que mes données soient utilisés à des fins commerciales.\"\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n              <Button\r\n                className=\"buttonInscri\"\r\n                type=\"submit\"\r\n                onClick={this.addNewRegister}\r\n              >\r\n                S'inscrire\r\n              </Button>\r\n\r\n              <br />\r\n              <p>{this.state.message}</p>\r\n            </Col>\r\n            <Col className=\"backInscr\" md={5}></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: null, password: null };\r\n  }\r\n\r\n  change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  \r\n\r\n  loginClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ message: responseObject.message });\r\n\r\n          if (responseObject.token) {\r\n            localStorage.setItem(\"token\", responseObject.token);\r\n            localStorage.setItem(\"userID\", responseObject.userId);\r\n            this.props.setLogin(true);\r\n            this.props.history.push(\"/ListeServeurs\");\r\n          }\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous!</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.change}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.change}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.loginClient}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\n//import Navbar from \"../../assets/components/Navbar/Navbar\";\r\n//import Historique from \"../Historique/Historique\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//import Historique from \"../Historique/Historique\";\r\n\r\n/*style import*/\r\nimport \"./profil.css\";\r\n\r\nclass Client extends Component {\r\n  constructor(props) {\r\n    console.log();\r\n    super(props);\r\n    this.state = {\r\n      client: { historique: [] },\r\n    };\r\n  }\r\n  click = () => {\r\n    this.props.history.push({\r\n      pathname: \"/ListeServeurs\",\r\n    });\r\n  };\r\n\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  deleteClient = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n      /**\"Bearer Token\" est un JSON Web Token dont le rôle est d'indiquer que l'utilisateur \r\n       qui accède aux ressources est bien authentifié. */\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/Home\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  signOut = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/Connexion\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipalProfil \">\r\n        <Button\r\n          className=\"buttontip\"\r\n          variant=\"warning\"\r\n          size=\"sm\"\r\n          onClick={this.click}\r\n        >\r\n          POURBOIRE\r\n        </Button>\r\n        <Row>\r\n        <Col >\r\n        \r\n          <h1 className=\"Titre-profil\">Mon Profil Client</h1>\r\n        <div className=\"infoProfil\">\r\n              <p>\r\n                {this.state.client.firstname} {this.state.client.lastname}\r\n              </p>\r\n              <p className=\"profilPara\">\r\n                {this.state.client.adress} \r\n              </p>\r\n              <p className=\"profilPara\">\r\n                 {this.state.client.phone}\r\n              </p>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col s={12} xs={12} md={6}>\r\n        <Link to=\"/modifierMonProfil\" className=\"modif\">\r\n             <Button className=\"buttonedit\" type=\"submit\">\r\n                 Mettre à jour mon profil\r\n             </Button>\r\n         </Link>\r\n         </Col>\r\n         <Col s={12} xs={12} md={6}>\r\n         <Link to=\"/ListeServeurs\" className=\"modif\">\r\n             <Button className=\"buttonedit\" type=\"submit\">\r\n                 Donner un pourboire\r\n             </Button>\r\n         </Link>\r\n         </Col>\r\n        <Col s={12} xs={12} md={6}>\r\n         <Link to=\"/Historique\" className=\"modif\">\r\n             <Button className=\"buttonedit\" type=\"submit\">\r\n                 Historique de mes dons\r\n             </Button>\r\n         </Link>\r\n         </Col>\r\n         <Col s={12} xs={12} md={6}>\r\n        <div className=\"Titre\">\r\n          <Button\r\n            className=\"buttondeco\"\r\n            variant=\"outline-warning\"\r\n            type=\"submit\"\r\n            onClick={this.signOut}\r\n          >\r\n            Se déconnecter\r\n          </Button>\r\n        </div>\r\n        </Col>\r\n        <p>{this.state.message}</p>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Client;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass footer extends Component {\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"cgu-cgv/CGV_TIPTOTHANK.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Condition Général\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#pricing\"\r\n                className=\"textFooter\"\r\n                onClick={this.deleteProfil}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link eventKey={2} href=\"#memes\" className=\"textFooter\">\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./HomePageClient.css\";\r\n\r\nclass HomePageClient extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"ContainerHome\">\r\n        <Row className=\"blocHome\">\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Sans compte client</h2>\r\n            <p>Donner un pourboire sans créer de compte</p>\r\n            <Link to={\"/ListeServeurs\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Avec compte client</h2>\r\n            <p>Me connecter à mon espace Tipourboire</p>\r\n            <Link to={\"/\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePageClient;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./Cards.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      Card details\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CardSection;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport Cards from \"../../assets/components/Cards/Cards\";\r\nimport \"./listeServeurs.css\";\r\n\r\nclass Liste extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] } };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataServeurs();\r\n\r\n    console.log(\"localStorage.getItem()\");\r\n    console.log(localStorage.getItem(\"@idRestaurant\"));\r\n  }\r\n\r\n  getDataServeurs = (e) => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n      /*body: JSON.stringify(data),*/\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataServeur\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          this.setState({ serveur: data });\r\n          localStorage.setItem(\"restaurantName\", data.restaurantName);\r\n          localStorage.setItem(\"@idRestaurant\", data._id);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  saveIdRestaurant = () => {};\r\n  display = () => {\r\n    return this.state.serveur.tabServeur.map((element, index) => {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"rowTitre\">\r\n            <Col>\r\n              <h3>Donnez un tip à</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowTitre2\">\r\n            <Col s={12}>\r\n              <h3>{element.serveurName}</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowImage\">\r\n            <Col>\r\n              <Image src={\"https://back-end.osc-fr1.scalingo.io/\" + element.serveurPicture} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"butTips\">\r\n            <Col>\r\n              <Button\r\n                onClick={() => {\r\n                  const headers = new Headers({\r\n                    \"Content-Type\": \"application/json\",\r\n                  });\r\n                  const data = {\r\n                    email: element.serveurMail,\r\n                  };\r\n                  const options = {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                  };\r\n\r\n                  fetch(\"https://back-end.osc-fr1.scalingo.io/client/emailServeur\", options)\r\n                    .then((response) => {\r\n                      return response;\r\n                    })\r\n                    .then(\r\n                      (data) => {\r\n                        console.log(data);\r\n                      },\r\n\r\n                      (error) => {\r\n                        console.log(error);\r\n                      }\r\n                    );\r\n                  this.props.history.push({\r\n                    pathname: \"/Payment\",\r\n                  });\r\n                }}\r\n              >\r\n                Donner un Pourboire\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocPrincipalClient\">\r\n        <Row className=\"vousEtes\">\r\n          <Col className=\"colLieu\" s={12}>\r\n            <img src=\"/logoTTT/map.png\" />\r\n            <h1 className=\"Titre\">\r\n              Lieu : {this.state.serveur.restaurantName}\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {\" \"}\r\n          <Col className=\"colButton\">\r\n            <Button\r\n              onClick={() => {\r\n                const headers = new Headers({\r\n                  \"Content-Type\": \"application/json\",\r\n                });\r\n                const data = {};\r\n                const options = {\r\n                  method: \"POST\",\r\n                  headers: headers,\r\n                  body: JSON.stringify(data),\r\n                };\r\n\r\n                fetch(\"https://back-end.osc-fr1.scalingo.io/client/emailServeur\", options)\r\n                  .then((response) => {\r\n                    return response;\r\n                  })\r\n                  .then(\r\n                    (data) => {\r\n                      console.log(data);\r\n                    },\r\n\r\n                    (error) => {\r\n                      console.log(error);\r\n                    }\r\n                  );\r\n                this.props.history.push({\r\n                  pathname: \"/TipCommun\",\r\n                });\r\n              }}\r\n            >\r\n              Donner à toute l'équipe !\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"display\">\r\n          <Col xs={12} s={12} md={4}>\r\n            {this.display()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Liste;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  NavLink,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n//import Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass BarreMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/Profil\">Mon profil</Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                localStorage.clear();\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              href=\"/\"\r\n            >\r\n              Deconnexion\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    } else {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n            <Dropdown.Item href=\"/Inscription\">Inscription</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n    console.log(\"............\", this.props.login);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"partie1\">\r\n          {this.connect()}\r\n          <Col className=\"logoPartie1\" md={12}>\r\n            <img src=\"/logoTTT/logoJaune.png\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default BarreMenu;\r\n","import React, { Component } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport \"./checkoutForm.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass CheckoutForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      client: {},\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state.client.email);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  app = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 10,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        10 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app1 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 2,\r\n        },\r\n      ],\r\n      mode: \"payment\",\r\n\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        2 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app2 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 5,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        5 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  appChoice = async (event) => {\r\n    if (this.state.amount <= 1) {\r\n      window.alert(\"Le montant minimum du tips doit être de 2 euros\");\r\n\r\n      return;\r\n    } else {\r\n      // When the customer clicks on the button, redirect them to Checkout.\r\n      const stripe = await stripePromise;\r\n      let amount = this.state.amount;\r\n      const { error } = await stripe.redirectToCheckout({\r\n        lineItems: [\r\n          {\r\n            price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n            quantity: Number(amount),\r\n          },\r\n        ],\r\n        mode: \"payment\",\r\n\r\n        successUrl:\r\n          \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n          amount +\r\n          \"&mail=\" +\r\n          this.state.client.email +\r\n          \"&RN=\" +\r\n          localStorage.getItem(\"restaurantName\"),\r\n        cancelUrl: \"http://localhost:3000/Payment\",\r\n      });\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `error.message`.\r\n    }\r\n  };\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className='check'>\r\n        <div className=\"blocTips\">\r\n          <div className=\"allButton\">\r\n            <h1 className=\"titleTips\">Don Tipourboire</h1>\r\n            <Row className=\"RowPourboire\">\r\n              <Col>\r\n                <Button className=\"tipButton1\" onClick={this.app1}>\r\n                   2 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton2\" onClick={this.app2}>\r\n                  5 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton3\" onClick={this.app}>\r\n                  10 €\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <h1 className=\"amount\">Don libre</h1>\r\n          <Row>\r\n            <Col xs={12} s={12} md={12}>\r\n              <Form>\r\n                <Form.Group controlId=\"formGroupAmount\">\r\n                  <Form.Control\r\n                    name=\"amount\"\r\n                    type=\"number\"\r\n                    placeholder=\"Montant\"\r\n                    onChange={this.change}\r\n                    value={this.state.amount}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"amountMsg\">\r\n            (Veuillez saisir uniquement des chiffres entiers)\r\n          </p>\r\n          <Button\r\n            className=\"validAmount\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={this.appChoice}\r\n          >\r\n            Valider\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckoutForm;\r\n","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { _id: \"\" };\r\n  }\r\n\r\n  Nocompte = () => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <p>Tipourboire ne collecte aucune information</p>\r\n          <p>\r\n            <Link to={\"https://stripe.com/payment-terms/legal\"}>\r\n              CGU Stripe\r\n            </Link>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Elements stripe={stripePromise}>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Payment;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Button, Card,Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DailyMenu.css\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      db1: {},\r\n      menu: \"\",\r\n    };\r\n  }\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/menu/\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          let db = JSON.parse(data)\r\n          this.setState({ db1: db })\r\n          this.setState({menu:this.state.db1.menu.dailyMenu.picture})\r\n          console.log(\"this.state.db1\")\r\n         \r\n          console.log(this.state.menu)\r\n        },   \r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipal\">\r\n        \r\n          \r\n        <Card>\r\n          <h2 className=\"Titre\">MENU DU JOUR</h2>\r\n          <Card.Body>\r\n            <p className=\"datemenu\"></p>\r\n          </Card.Body>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={\"https://back-end.osc-fr1.scalingo.io/\" + this.state.menu}\r\n            className=\"dailyMenu\"\r\n            alt=\"Menu du Jour\"\r\n          />\r\n        \r\n         \r\n          \r\n        </Card>\r\n        <Row>\r\n           <Col md={12}>\r\n          <Link to=\"/Home\">\r\n            <Button className=\"button\" variant=\"outline-warning\" size=\"lg\">\r\n              POURBOIRE\r\n            </Button>\r\n          </Link>\r\n          </Col>\r\n          </Row>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return <DailyMenu />;\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-renew\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button className=\"renewButton\">Valider</Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-reset\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n                <button className=\"resetButton\">Confirmer</button>\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Commentaire.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Commentaires extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {commentaires:[{nom:\"\", prenom:\"\", texte:\"\"}] };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewStatut = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n        prenom:this.state.prenom,\r\n        nom:this.state.nom,\r\n        texte: this.state.texte,\r\n        id:this.props.serveurId\r\n\r\n      \r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n     \r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/commentaire\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n           \r\n          this.setState({ message: responseObject.message });\r\n         \r\n          this.props.history.push({\r\n            state: {\r\n              serveurId: this.props.id,\r\n            \r\n              \r\n            },\r\n            pathname:\"/menu\",\r\n           \r\n\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Container className='contCom'>\r\n        <Row className='coms'>\r\n          <Col xs={12} s={12} md={12}><h1 className='titreCom'>Laissez un commentaire à votre serveur</h1></Col>\r\n        </Row>\r\n            <Row className='coms'>\r\n            <Col xs={12} s={12} md={12}>\r\n            <Form.Group>\r\n         \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.prenom}\r\n              name=\"prenom\"\r\n              type=\"text\"\r\n              placeholder=\"Prenom\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n           \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.nom}\r\n              name=\"nom\"\r\n              type=\"text\"\r\n              placeholder=\"nom\"\r\n            />\r\n          </Form.Group>\r\n          <textarea\r\n            onChange={this.handleInput}\r\n            value={this.state.texte}\r\n            name=\"texte\"\r\n            type=\"text\"\r\n            class=\"form-control formCommentaire\"\r\n            placeholder=\"Votre commentaire\"\r\n          ></textarea>\r\n          </Col>\r\n          \r\n          <Col>\r\n          <button\r\n            className=\"buttonStatut\"\r\n            type=\"submit\"\r\n            onClick={this.addNewStatut}\r\n          >\r\n            Publier\r\n          </button>\r\n          </Col>\r\n          <Col className='caract'>\r\n          <small>100 caractères maximum</small>\r\n          </Col>\r\n          </Row>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Commentaires;","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./historique.css\";\r\n\r\nclass Historique extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : { historique : []} ,\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.historique.map((element, index) => {\r\n      return (\r\n       \r\n          <tr>\r\n            <td type=\"text\" id=\"montant\" name=\"montant\">\r\n              {\" \"}\r\n              {element.montant / 100}€\r\n            </td>\r\n            <td type=\"date\" id=\"date\" name=\"date\">\r\n              {\" \"}\r\n              {new Date(element.date).toLocaleDateString()}\r\n            </td>\r\n            <td type=\"text\" id=\"waiter\" name=\"waiter\">\r\n              {\" \"}\r\n              {element.waiter}\r\n            </td>\r\n            <td type=\"text\" id=\"restaurantName\" name=\"restaurantName\">\r\n              {\" \"}\r\n              {element.restaurantName}\r\n            </td>\r\n          </tr>\r\n         \r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='histoClient'>\r\n        <Row>\r\n          <Col className='titleHisto'> <h3>Historique de vos pourboire</h3></Col>\r\n        </Row>\r\n       \r\n      <Row class=\"table-responsive\">\r\n        <Table  striped hover>\r\n        <thead>\r\n      <tr>\r\n        <th>Montant</th>\r\n        <th>Date</th>\r\n        <th>Serveur</th>\r\n        <th>Restaurant</th>\r\n      </tr>\r\n      </thead>\r\n        <tbody>\r\n        {this.display()}\r\n        </tbody>\r\n      </Table>\r\n      </Row>\r\n        \r\n       \r\n      \r\n      </Container>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Historique\r\n","import React, { Component } from \"react\";\r\nimport \"./modifierSonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let client = this.state.client;\r\n    client[event.target.name] = event.target.value;\r\n    this.setState({\r\n      client: client,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={12} className=\"titreModif\">\r\n       \r\n          <h1>Modification du profil</h1>\r\n        \r\n        \r\n        <Form>\r\n          <Form.Group controlId=\"formGroupName\">\r\n            \r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.client.lastname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPrenom\">\r\n         \r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.client.firstname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAdresse\">\r\n            \r\n            <Form.Control\r\n              as=\"select\"\r\n              type=\"text\"\r\n              placeholder=\"Sexe\"\r\n              name=\"gender\"\r\n              onChange={this.change}\r\n              value={this.state.client.gender}\r\n            >\r\n            <option>-</option>\r\n            <option>Femme</option>\r\n            <option>Homme</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formVille\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ville\"\r\n              name=\"adress\"\r\n              onChange={this.change}\r\n              value={this.state.client.adress}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formTel\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telephone(Facultatif)\"\r\n              name=\"phone\"\r\n              onChange={this.change}\r\n              value={this.state.client.phone}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAge\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Age\"\r\n              name=\"age\"\r\n              onChange={this.change}\r\n              value={this.state.client.age}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button\r\n          className=\"submitButton\"\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={this.editClient}\r\n        >\r\n          Mettre à jour mon profil\r\n        </Button>\r\n        <br/>\r\n        {this.state.message}\r\n        </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./TipCommun.css\";\r\n\r\nclass TipCommun extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  postInfoCard = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/TipUser\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem(\"@data\", JSON.stringify(data));\r\n      });\r\n    this.props.history.push(\"/TipCommun1\");\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\"xs={12} s={12} md={12}>\r\n         \r\n        <p className=\"titleCommun\">\r\n          Information client\r\n        </p>\r\n        </Col>\r\n        <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n        <Form className=\"formCommun\">\r\n          <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n            <Form.Control className=\"formMail\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"E-Mail\"\r\n              onChange={this.handleInput}\r\n              value={this.state.email}\r\n              className='marginInput'\r\n            />\r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.handleInput}\r\n              value={this.state.lastname}\r\n              className='marginInput'\r\n            />\r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.handleInput}\r\n              value={this.state.firstname}\r\n              className='marginInput'\r\n            />\r\n          </Form.Group>\r\n          </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n          <Button className=\"communButton\" onClick={this.postInfoCard}>\r\n            Continuer vers la page de paiement\r\n          </Button>\r\n          </Col>\r\n        \r\n      \r\n      </Row>\r\n      </Container>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./TipCommun1.css\";\r\nimport { Alert } from \"bootstrap\";\r\n\r\nclass TipCommun1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: {}, resultat: {}, walletID: \"\" };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  postToken = () => {\r\n    if (this.state.amount <= 1) {\r\n      window.alert(\"Le montant minimum du tips doit être de 2 euros\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: this.state.data.CardRegistrationURL,\r\n        data: qs.stringify({\r\n          cardRegistrationId: this.state.data.Id,\r\n          accessKeyRef: this.state.data.AccessKey,\r\n          data: this.state.data.PreregistrationData,\r\n          cardNumber: this.state.cardNumber,\r\n          cardExpirationDate: this.state.cardExpirationDate,\r\n          cardCvx: this.state.cardCvx,\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        },\r\n      }).then((result) => {\r\n        this.setState({ resultat: result });\r\n\r\n        this.payin();\r\n      });\r\n    }\r\n  };\r\n  payin = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data1 = {\r\n      walletID: this.state.walletID,\r\n      amount: this.state.amount,\r\n      cardRegistrationId: this.state.data.Id,\r\n      registrationData: this.state.resultat.data,\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data1),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/payin\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        if (result.Type === \"param_error\") {\r\n          window.alert(\"Une erreur s'est produite, veuillez réessayer.\");\r\n        } else {\r\n          this.setState({ walletID: result });\r\n          window.alert(\r\n            \"Merci pour votre pourboire. A bientôt dans nos restaurants partenaires\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  getWalletId = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data1 = {\r\n      _id: localStorage.getItem(\"@idRestaurant\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data1),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getWalletId\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        this.setState({ walletID: result });\r\n        this.setState({ message: result.message });\r\n        console.log(result.ResultMessage);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletId();\r\n    console.log(\"JSON\");\r\n    this.setState({ data: JSON.parse(localStorage.getItem(\"@data\")) });\r\n    console.log(JSON.parse(localStorage.getItem(\"@data\")));\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Paiement du pourboire</p>\r\n            <h5 className=\"tipsMin\">Le tips doit être de 2 euros minimum !</h5>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  placeholder=\"Montant du Don Général\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardNumber\"\r\n                  type=\"text\"\r\n                  placeholder=\"Numéro de carte bleu\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardExpirationDate\"\r\n                  type=\"text\"\r\n                  placeholder=\"Date d'expiration\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardCvx\"\r\n                  type=\"text\"\r\n                  placeholder=\"CVX\"\r\n                  onChange={this.handleInput}\r\n                  className=\"marginInput\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n            <Button className=\"communButtonVal\" onClick={this.postToken}>\r\n              Payer\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun1;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass MangoCards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId=\"formGroupAmount\">\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"E-Mail\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"birthday\"\r\n              type=\"date\"\r\n              placeholder=\"Date de naissance\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MangoCards;\r\n","/**\r\n * App.js - Main app component\r\n */\r\n\r\n/*Module imports*/\r\nimport React, { Component } from \"react\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport HomePageClient from \"../HomePageClient/HomePageClient\";\r\nimport Liste from \"../ListeServeurs/ListeServeurs\";\r\nimport BarreMenu from \"../../assets/components/Navbar/Navbar\";\r\nimport Payment from \"../Payment/Payment\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Commentaires from \"../Payment/Commentaire\";\r\nimport Historique from \"../Historique/Historique\";\r\nimport modifierMonProfil from \"../modifierSonProfil/modifierSonProfil\";\r\nimport TipCommun from \"../TipCommun/TipCommun\";\r\nimport TipCommun1 from \"../TipCommun/TipCommun1\";\r\nimport MangoCards from \"../MangoCards/MangoCards\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// loadStripe is initialized with a fake API key.\r\n// Sign in to see examples pre-filled with your key.\r\n\r\n/*Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <BarreMenu setLogin={this.setLogin} login={this.state.login} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/Inscription\" exact component={Inscription} />\r\n            <Route path=\"/Profil\" exact component={Profil} />\r\n            <Route path=\"/Home\" exact component={HomePageClient} />\r\n            <Route path=\"/ListeServeurs\" exact component={Liste} />\r\n            <Route path=\"/Payment\" exact component={Payment} />\r\n            <Route path=\"/menu\" exact component={Menu} />\r\n            <Route path=\"/Commentaires\" exact component={Commentaires} />\r\n            <Route path=\"/passwordReset\" exact component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" exact component={PasswordRenew} />\r\n            <Route path=\"/Historique\" exact component={Historique} />\r\n            <Route path=\"/TipCommun\" exact component={TipCommun} />\r\n            <Route path=\"/TipCommun1\" exact component={TipCommun1} />\r\n            <Route path=\"/MangoCards\" exact component={MangoCards} />\r\n            <Route\r\n              path=\"/modifierMonProfil\"\r\n              exact\r\n              component={modifierMonProfil}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n/*import \"./index.css\";*/\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}